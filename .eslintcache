[{"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\index.js":"1","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\App.js":"2","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\reportWebVitals.js":"3","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\HomePage\\HomePage.js":"4","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\HeroSection\\HeroSection.js":"5","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\ChooseGener\\ChooseGener.js":"6","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\Context.js":"7","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\BackgroundImg\\BackgroundImg.js":"8","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\GenreButton\\GenreButton.js":"9","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\Footer\\Footer.js":"10","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\MovieCard\\MovieCard.js":"11","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\SvgCircle\\SvgCircle.js":"12","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\MoviePage\\MoviePage.js":"13","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\NavBar\\NavBar.js":"14","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\MovieSearch\\MovieSearch.js":"15","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\ShowPopular\\ShowPopular.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":650,"mtime":1612000825698,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1410,"mtime":1612029909800,"results":"21","hashOfConfig":"18"},{"size":4984,"mtime":1611594215968,"results":"22","hashOfConfig":"18"},{"size":3954,"mtime":1612005064866,"results":"23","hashOfConfig":"18"},{"size":85,"mtime":1611325859570,"results":"24","hashOfConfig":"18"},{"size":412,"mtime":1611326254494,"results":"25","hashOfConfig":"18"},{"size":459,"mtime":1611495971713,"results":"26","hashOfConfig":"18"},{"size":551,"mtime":1611419088110,"results":"27","hashOfConfig":"18"},{"size":834,"mtime":1611849676618,"results":"28","hashOfConfig":"18"},{"size":1115,"mtime":1611594445183,"results":"29","hashOfConfig":"18"},{"size":5373,"mtime":1611950515775,"results":"30","hashOfConfig":"18"},{"size":492,"mtime":1611950470468,"results":"31","hashOfConfig":"18"},{"size":314,"mtime":1612001028388,"results":"32","hashOfConfig":"18"},{"size":1009,"mtime":1612029645964,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"10tnelx",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"36"},"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\index.js",[],["75","76"],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\App.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\reportWebVitals.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\HomePage\\HomePage.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\HeroSection\\HeroSection.js",["77","78"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./HeroSection.css\";\r\nimport { Context } from \"./../Context\";\r\nimport SvgCircle from \"./../SvgCircle/SvgCircle\";\r\n\r\nconst HeroSection = () => {\r\n  const [bestMovie, setBestMovie] = useState();\r\n  const [bestMovieDet, setBestMovieDet] = useState();\r\n  const [value, setValue] = useState(0);\r\n  const [radius, setRadius] = useState(0);\r\n  const { img, setImg } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/movie/popular?api_key=de27f42e716edbcbf3d004f4f825bc85&language=en-US&page=1\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setBestMovie(data.results);\r\n\r\n        fetch(\r\n          `https://api.themoviedb.org/3/movie/${data.results[value].id}?api_key=de27f42e716edbcbf3d004f4f825bc85&language=en-US`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setBestMovieDet(data);\r\n\r\n            setImg(data.backdrop_path);\r\n            setValue(value + 1);\r\n            setRadius(((2 * 3.141592654 * 25) / 100) * data.vote_average * 10);\r\n          });\r\n      });\r\n  }, []);\r\n  const add = () => {\r\n    if (value === 6) {\r\n      setValue(0);\r\n    } else {\r\n      setValue(value + 1);\r\n    }\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${bestMovie[value].id}?api_key=de27f42e716edbcbf3d004f4f825bc85&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setBestMovieDet(data);\r\n        setImg(data.backdrop_path);\r\n\r\n        setRadius(((2 * 3.141592654 * 25) / 100) * data.vote_average * 10);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {bestMovieDet ? (\r\n        <div>\r\n          <div className=\"BlackFade\" onClick={add}>\r\n            <h1 className=\"title\">{bestMovieDet.original_title}</h1>\r\n            <h1 className=\"year\">\r\n              ({bestMovieDet.release_date.substring(0, 4)})\r\n            </h1>\r\n            <div className=\"SVGcontainer\">\r\n              <SvgCircle\r\n                radius={radius}\r\n                vote_average={bestMovieDet.vote_average}\r\n                SvgClass={\"circle-chart\"}\r\n              ></SvgCircle>\r\n              <h1 className=\"score\">User Score </h1>\r\n            </div>\r\n            <p className=\"overview\">\r\n              {bestMovieDet.overview.substring(0, 230)} Read More\r\n            </p>\r\n            <hr></hr>\r\n            <p className=\"tagline\"> {bestMovieDet.tagline}</p>\r\n            <div className=\"ButtonsContainer\">\r\n              <div className=\"AddContainer\">\r\n                <span></span>\r\n                <h1>Add</h1>\r\n              </div>\r\n              <div className=\"PlayContainer\">\r\n                <span></span>\r\n                <h1>Play</h1>\r\n              </div>\r\n            </div>\r\n            <ul className=\"InfoContainer\">\r\n              <li>\r\n                <h1>{bestMovieDet.release_date}</h1>\r\n                <h2>Relised</h2>\r\n              </li>\r\n              <li>\r\n                <h1>\r\n                  {Math.floor(bestMovieDet.runtime / 60)}h\r\n                  {bestMovieDet.runtime % 60}m\r\n                </h1>\r\n                <h2>Time</h2>\r\n              </li>\r\n              <li>\r\n                <h1>\r\n                  {bestMovieDet.production_companies.length !== 0\r\n                    ? bestMovieDet.production_companies[0].name\r\n                    : \"Sorry but no\"}\r\n                </h1>\r\n                <h2>Company</h2>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"GenersContainer\">\r\n              {bestMovieDet.genres.length > 0 ? (\r\n                <div>\r\n                  <li>{bestMovieDet.genres[0].name}</li>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {bestMovieDet.genres.length > 1 ? (\r\n                <div>\r\n                  <li> - </li>\r\n                  <li>{bestMovieDet.genres[1].name}</li>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {bestMovieDet.genres.length > 2 ? (\r\n                <div>\r\n                  <li> - </li>\r\n                  <li>{bestMovieDet.genres[2].name}</li>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {bestMovieDet.genres.length > 3 ? (\r\n                <div>\r\n                  <li> - </li>\r\n                  <li>{bestMovieDet.genres[3].name}</li>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {bestMovieDet.genres.length > 4 ? (\r\n                <div>\r\n                  <li> - </li>\r\n                  <li>{bestMovieDet.genres[4].name}</li>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3 className=\"LodingText\">Loding...</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\ChooseGener\\ChooseGener.js",["79","80","81"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./ChooseGener.css\";\r\nimport GenreButton from \"./../GenreButton/GenreButton\";\r\nimport MovieCard from \"./../MovieCard/MovieCard\";\r\n\r\nconst ChooseGener = () => {\r\n  const [allGenre, setAllGenre] = useState(\"\");\r\n  const [id, setId] = useState();\r\n  const [movies, setMovies] = useState([]);\r\n  const [num, setNum] = useState(-2);\r\n  const [page, setPage] = useState(0);\r\n  const [search, setSearch] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=de27f42e716edbcbf3d004f4f825bc85&language=en-US\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setAllGenre(data.genres);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    setMovies([]);\r\n    if (search) {\r\n      fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=de27f42e716edbcbf3d004f4f825bc85&language=en-US&query=${search}&page=1&include_adult=false`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setMovies([]);\r\n          if (data) {\r\n            setMovies(data.results);\r\n            console.log(data);\r\n          }\r\n        });\r\n    }\r\n  }, [search]);\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=de27f42e716edbcbf3d004f4f825bc85&with_genres=${id}&page=${num}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMovies([]);\r\n        setMovies((old) => old.concat(data.results));\r\n        console.log(data);\r\n\r\n        fetch(\r\n          `https://api.themoviedb.org/3/discover/movie?api_key=de27f42e716edbcbf3d004f4f825bc85&with_genres=${id}&page=${\r\n            num + 1\r\n          }`\r\n        )\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setMovies((old) => old.concat(data.results));\r\n\r\n            fetch(\r\n              `https://api.themoviedb.org/3/discover/movie?api_key=de27f42e716edbcbf3d004f4f825bc85&with_genres=${id}&page=${\r\n                num + 2\r\n              }`\r\n            )\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                setMovies((old) => old.concat(data.results));\r\n              });\r\n          });\r\n      });\r\n  }, [id]);\r\n\r\n  const getSelectectCallBack = (inedx) => {\r\n    console.log(inedx);\r\n    setId(inedx);\r\n    setNum(1);\r\n    console.log(movies);\r\n  };\r\n  return (\r\n    <div className=\"Container\">\r\n      {allGenre ? (\r\n        <div>\r\n          <div className=\"BlackFadeGener\"></div>\r\n          <input\r\n            className=\"SearchBar\"\r\n            onChange={(e) => {\r\n              setSearch(e.target.value);\r\n              console.log(search);\r\n            }}\r\n            value={search}\r\n            placeholder=\"Search for something\"\r\n          ></input>\r\n          {/* <h1 className=\"TitleGener\">Choose Your Favourite Gener</h1> */}\r\n          <div className=\"GenerContainer\">\r\n            {allGenre.map((element) => {\r\n              return (\r\n                <GenreButton\r\n                  name={element.name}\r\n                  id={element.id}\r\n                  getSelectectCallBack={getSelectectCallBack}\r\n                  selected={element.id === id ? true : false}\r\n                  key={element.id}\r\n                ></GenreButton>\r\n              );\r\n            })}\r\n            <div className=\"MovieCardsContainer\">\r\n              {movies.filter((item) => item).length > 1 ? (\r\n                movies.map((el, index) => {\r\n                  return <MovieCard key={index} el={el}></MovieCard>;\r\n                })\r\n              ) : (\r\n                <h1 className=\"description\">\r\n                  ↑ click on some gener to see all of your favourite movies ↑\r\n                </h1>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChooseGener;\r\n","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\Context.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\BackgroundImg\\BackgroundImg.js",["82"],"import React, { useContext } from \"react\";\r\nimport \"./BackgroundImg.css\";\r\nimport { Context } from \"./../Context\";\r\n\r\nconst BackgroundImg = () => {\r\n  const { img, setImg } = useContext(Context);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${img}) `,\r\n      }}\r\n      className=\"BackgroundImg\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default BackgroundImg;\r\n","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\GenreButton\\GenreButton.js",["83"],"import React, { useState } from \"react\";\r\nimport \"./GenreButton.css\";\r\n\r\nconst GenreButton = ({ name, id, getSelectectCallBack, selected }) => {\r\n  const [ID, setID] = useState(id);\r\n  return (\r\n    <div\r\n      style={selected ? { background: \"#5AB3D8\" } : { background: \"#111111\" }}\r\n      onClick={() => getSelectectCallBack(ID)}\r\n      className=\"GenreButton\"\r\n    >\r\n      <span></span>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenreButton;\r\n","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\Footer\\Footer.js",["84","85"],"import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"FooterContiner\">\r\n      <a\r\n        href=\"https://www.themoviedb.org/\"\r\n        className=\"LogoFooter\"\r\n        target=\"_blank\"\r\n      >\r\n        <h1>site made with</h1>\r\n        <span></span>\r\n      </a>\r\n      <a\r\n        href=\"https://github.com/KlopoCz/Movie\"\r\n        className=\"GitHubFooter\"\r\n        target=\"_blank\"\r\n      >\r\n        <span></span>\r\n        <h1>GitHub</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\MovieCard\\MovieCard.js",[],["86","87"],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\SvgCircle\\SvgCircle.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\MoviePage\\MoviePage.js",["88"],"import React, { useEffect, useState } from \"react\";\r\nimport SvgCircle from \"./../SvgCircle/SvgCircle\";\r\nimport NavBar from \"./../NavBar/NavBar\";\r\nimport \"./MoviePage.css\";\r\n\r\nconst MoviePage = ({ location }) => {\r\n  const [movieData, setMovieData] = useState();\r\n  const [radius, setRadius] = useState();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const q = params.get(\"q\");\r\n    console.log(q);\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${q}?api_key=de27f42e716edbcbf3d004f4f825bc85&language=en-US`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setMovieData(data);\r\n        console.log(data);\r\n        setRadius(((2 * 3.141592654 * 25) / 100) * data.vote_average * 10);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NavBar showSearchBar={true}></NavBar>\r\n      {movieData ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              backgroundImage: `url(https://image.tmdb.org/t/p/w1280/${movieData.backdrop_path}) `,\r\n            }}\r\n            className=\"MoviePageBackgroundImg\"\r\n          >\r\n            <div className=\"MoviePgeContentContainer\">\r\n              <div className=\"MoviePageTitleContainer\">\r\n                <h1 className=\"MoviePageTitle\">\r\n                  {movieData.original_title}\r\n                  {\"   \"}\r\n                  <span>({movieData.release_date.substring(0, 4)})</span>\r\n                </h1>\r\n              </div>\r\n              <div className=\"StatusGenerCont\">\r\n                <h1 className=\"MoviePageStatus\">{movieData.status}</h1>\r\n                <ul className=\"GenersContainerMovie\">\r\n                  {movieData.genres.length > 0 ? (\r\n                    <div>\r\n                      <li>{movieData.genres[0].name}</li>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {movieData.genres.length > 1 ? (\r\n                    <div>\r\n                      <li> - </li>\r\n                      <li>{movieData.genres[1].name}</li>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {movieData.genres.length > 2 ? (\r\n                    <div>\r\n                      <li> - </li>\r\n                      <li>{movieData.genres[2].name}</li>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {movieData.genres.length > 3 ? (\r\n                    <div>\r\n                      <li> - </li>\r\n                      <li>{movieData.genres[3].name}</li>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {movieData.genres.length > 4 ? (\r\n                    <div>\r\n                      <li> - </li>\r\n                      <li>{movieData.genres[4].name}</li>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </ul>\r\n              </div>\r\n              <div className=\"MoviePageButtonsRateContainer\">\r\n                <div className=\"MoviePageUserScoreContainer\">\r\n                  <SvgCircle\r\n                    radius={radius}\r\n                    vote_average={movieData.vote_average}\r\n                    SvgClass={\"MoviePageCircle\"}\r\n                  ></SvgCircle>\r\n                  <h1>User Score</h1>\r\n                </div>\r\n                <div className=\"MovieButtonsContainer\">\r\n                  <span className=\"first\"></span>\r\n                  <span className=\"last\"></span>\r\n                </div>\r\n              </div>\r\n              <h1 className=\"MoviePageOverview\">Overview</h1>\r\n              <p className=\"MoviePageOverviewP\">{movieData.overview}</p>\r\n              <h2 className=\"MoviePageTagline\">{movieData.tagline}</h2>\r\n              <div className=\"MoreInfoContainer\">\r\n                <div>\r\n                  <div>\r\n                    <h2>Relised:</h2>\r\n                    <h1>{movieData.release_date}</h1>\r\n                  </div>\r\n                  <div>\r\n                    <h2>Time:</h2>\r\n                    <h1>{movieData.runtime}</h1>\r\n                  </div>\r\n                  <div>\r\n                    <h2>Company:</h2>\r\n                    <h1>\r\n                      {movieData.production_companies[0]\r\n                        ? movieData.production_companies[0].name\r\n                        : \"\"}\r\n                    </h1>\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <h2>Language:</h2>\r\n                    <h1>{movieData.original_language}</h1>\r\n                  </div>\r\n                  <div>\r\n                    <h2>Budget:</h2>\r\n                    <h1>{movieData.budget}</h1>\r\n                  </div>\r\n                  <div>\r\n                    <h2>Revenue:</h2>\r\n                    <h1>{movieData.revenue}</h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                backgroundImage: `url(https://image.tmdb.org/t/p/w400/${movieData.poster_path}) `,\r\n              }}\r\n              className=\"MoviePageImg\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"Loding...\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n","C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\NavBar\\NavBar.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\MovieSearch\\MovieSearch.js",[],"C:\\Users\\vrana\\Documents\\codeproject\\movie\\src\\Components\\ShowPopular\\ShowPopular.js",["89"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ShowPopular.css\";\r\nimport MovieCard from \"./../MovieCard/MovieCard\";\r\n\r\nconst ShowPopular = ({ url, name }) => {\r\n  const [movieDate, setMovieData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data.results);\r\n        setMovieData(data.results);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1>{name}</h1>\r\n      <div className=\"ShowPopularContainer\">\r\n        {movieDate ? (\r\n          movieDate.filter((item) => item).length > 1 ? (\r\n            movieDate.map((el, index) => {\r\n              return <MovieCard key={index} el={el}></MovieCard>;\r\n            })\r\n          ) : (\r\n            <h1 className=\"description\">\r\n              ↑ click on some gener to see all of your favourite movies ↑\r\n            </h1>\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowPopular;\r\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":11,"column":11,"nodeType":"96","messageId":"97","endLine":11,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":33,"column":6,"nodeType":"100","endLine":33,"endColumn":8,"suggestions":"101"},{"ruleId":"94","severity":1,"message":"102","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":14},{"ruleId":"94","severity":1,"message":"103","line":11,"column":16,"nodeType":"96","messageId":"97","endLine":11,"endColumn":23},{"ruleId":"98","severity":1,"message":"104","line":69,"column":6,"nodeType":"100","endLine":69,"endColumn":10,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":6,"column":16,"nodeType":"96","messageId":"97","endLine":6,"endColumn":22},{"ruleId":"94","severity":1,"message":"107","line":5,"column":14,"nodeType":"96","messageId":"97","endLine":5,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":7,"column":7,"nodeType":"110","endLine":11,"endColumn":8},{"ruleId":"108","severity":1,"message":"109","line":15,"column":7,"nodeType":"110","endLine":19,"endColumn":8},{"ruleId":"90","replacedBy":"111"},{"ruleId":"92","replacedBy":"112"},{"ruleId":"98","severity":1,"message":"113","line":22,"column":6,"nodeType":"100","endLine":22,"endColumn":8,"suggestions":"114"},{"ruleId":"98","severity":1,"message":"115","line":14,"column":6,"nodeType":"100","endLine":14,"endColumn":8,"suggestions":"116"},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'img' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setImg' and 'value'. Either include them or remove the dependency array. You can also do a functional update 'setValue(v => ...)' if you only need 'value' in the 'setValue' call.","ArrayExpression",["119"],"'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'num'. Either include it or remove the dependency array.",["120"],"'setImg' is assigned a value but never used.","'setID' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement",["117"],["118"],"React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [setImg, value]",{"range":"131","text":"132"},"Update the dependencies array to be: [id, num]",{"range":"133","text":"134"},"Update the dependencies array to be: [location.search]",{"range":"135","text":"136"},"Update the dependencies array to be: [url]",{"range":"137","text":"138"},[1179,1181],"[setImg, value]",[2296,2300],"[id, num]",[781,783],"[location.search]",[423,425],"[url]"]